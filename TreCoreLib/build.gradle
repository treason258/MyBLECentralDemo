apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'

group = 'com.github.treason258'

def versionCodeForLib = 13
def versionNameForLib = '2.0.3'

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion

        versionCode versionCodeForLib
        versionName versionNameForLib

        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'

    // android
    compile rootProject.ext.dependencies.supportV4
    compile rootProject.ext.dependencies.appcompatV7
    compile rootProject.ext.dependencies.recyclerviewV7
    compile rootProject.ext.dependencies.constraint

    // jar
    compile files('libs/org.apache.http.legacy.jar')
    compile files('libs/httpmime-4.1.3.jar')

    // http
    compile 'com.zhy:okhttputils:2.6.2' // https://github.com/hongyangAndroid/okhttputils
    compile 'com.android.volley:volley:1.0.0' // https://github.com/google/volley

    // json
    compile 'com.google.code.gson:gson:2.8.2' // https://github.com/google/gson
    compile 'com.alibaba:fastjson:1.2.49' // https://github.com/alibaba/fastjson

    // image
    compile 'com.github.bumptech.glide:glide:3.7.0' // https://github.com/bumptech/glide
    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.5' // https://github.com/nostra13/Android-Universal-Image-Loader
    compile 'com.facebook.fresco:fresco:1.9.0' // https://github.com/facebook/fresco

    // tool
    compile 'com.jakewharton:butterknife:8.4.0' // https://github.com/JakeWharton/butterknife
    compile 'de.greenrobot:eventbus:2.2.1' // https://github.com/greenrobot/EventBus
    compile 'com.f2prateek.dart:dart:1.1.0' // https://github.com/f2prateek/dart
    compile 'com.squareup.picasso:picasso:2.5.2' // https://github.com/square/picasso

    // other
    compile 'com.umeng.analytics:analytics:6.1.4'

    // unused
    // compile 'com.mcxiaoke.volley:library:1.0.7' // https://github.com/mcxiaoke/android-volley
    // compile 'com.orhanobut:logger:1.15' // https://github.com/orhanobut/logger
    // compile 'com.meituan.android.walle:payload_reader:1.1.4' // https://github.com/Meituan-Dianping/walle
    // compile 'com.umeng.umsdk:analytics:7.5.2'
    // compile 'com.umeng.umsdk:common:1.5.4'

    println("******************************** TreCoreLib-build.gradle-dependencies-start ********************************")
    Project projectRoot = getRootProject()
    println(projectRoot)
    println(projectRoot.ext.dependencies)
    println("********************************")
    List<Project> projectList = getAllprojects().asList()
    for (int i = 0; i < projectList.size(); i++) {
        Project project = projectList.get(i)
        println(project)
    }
    println("******************************** TreCoreLib-build.gradle-dependencies-end ********************************")
}
